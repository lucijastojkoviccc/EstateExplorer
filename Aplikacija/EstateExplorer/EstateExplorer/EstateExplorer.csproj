<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaProxyServerUrl>https://localhost:44472</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AngleSharp" Version="1.0.2-alpha-281" />
    <PackageReference Include="HtmlAgilityPack" Version="1.11.46" />
    <PackageReference Include="iTextSharp" Version="5.5.13.3" />
    <PackageReference Include="itextsharp.xmlworker" Version="5.5.13.3" />
    <PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="7.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.Authorization" Version="7.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.Cors" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="7.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="7.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="7.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.5" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="7.0.5" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.5" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.5">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.1" />
    <PackageReference Include="Microsoft.IdentityModel.Logging" Version="6.30.1" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="7.0.6" />
    <PackageReference Include="Quartz" Version="3.6.2" />
    <PackageReference Include="Quartz.Extensions.DependencyInjection" Version="3.6.2" />
    <PackageReference Include="Quartz.Extensions.Hosting" Version="3.6.2" />
    <PackageReference Include="Select.HtmlToPdf" Version="22.2.0" />
    <PackageReference Include="SixLabors.ImageSharp" Version="3.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.5.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\**" />
    <EmbeddedResource Remove="ClientApp\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\.env.development" />
    <None Remove="ClientApp\.env.development.local" />
    <None Remove="ClientApp\aspnetcore-https.js" />
    <None Remove="ClientApp\aspnetcore-react.js" />
    <None Remove="ClientApp\package-lock.json" />
    <None Remove="ClientApp\package.json" />
    <None Remove="ClientApp\public\favicon.ico" />
    <None Remove="ClientApp\public\index.html" />
    <None Remove="ClientApp\public\manifest.json" />
    <None Remove="ClientApp\public\Slike\logoBrowser.ico" />
    <None Remove="ClientApp\public\Slike\logoStrana.png" />
    <None Remove="ClientApp\public\Slike\POCETNA2.jpg" />
    <None Remove="ClientApp\README.md" />
    <None Remove="ClientApp\src\App.js" />
    <None Remove="ClientApp\src\App.test.js" />
    <None Remove="ClientApp\src\AppRoutes.js" />
    <None Remove="ClientApp\src\components\api-authorization\ApiAuthorizationConstants.js" />
    <None Remove="ClientApp\src\components\api-authorization\ApiAuthorizationRoutes.js" />
    <None Remove="ClientApp\src\components\api-authorization\AuthorizeRoute.js" />
    <None Remove="ClientApp\src\components\api-authorization\AuthorizeService.js" />
    <None Remove="ClientApp\src\components\api-authorization\Login.js" />
    <None Remove="ClientApp\src\components\api-authorization\LoginMenu.js" />
    <None Remove="ClientApp\src\components\api-authorization\Logout.js" />
    <None Remove="ClientApp\src\components\Counter.js" />
    <None Remove="ClientApp\src\components\FetchData.js" />
    <None Remove="ClientApp\src\components\Home.js" />
    <None Remove="ClientApp\src\components\Layout.js" />
    <None Remove="ClientApp\src\components\NavMenu.css" />
    <None Remove="ClientApp\src\components\NavMenu.js" />
    <None Remove="ClientApp\src\custom.css" />
    <None Remove="ClientApp\src\index.js" />
    <None Remove="ClientApp\src\reportWebVitals.js" />
    <None Remove="ClientApp\src\service-worker.js" />
    <None Remove="ClientApp\src\serviceWorkerRegistration.js" />
    <None Remove="ClientApp\src\setupProxy.js" />
    <None Remove="ClientApp\src\setupTests.js" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
